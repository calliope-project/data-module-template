import yaml

from snakemake.utils import min_version, validate

min_version("8.10")


# Load the example configuration. This will be overridden by users.
configfile: workflow.source_path("../config/config.yaml")


# Validate the configuration using the schema file.
validate(config, workflow.source_path("internal/config.schema.yaml"))

# Load internal settings separately so users cannot modify them.
with open(workflow.source_path("internal/settings.yaml"), "r") as f:
    internal = yaml.safe_load(f)


# Add all your includes here.
include: "rules/automatic.smk"
include: "rules/dummy.smk"

# Add additional files to be delivered alongside the workflow here.
# This is needed e.g. for python code files that are never
# explicitly used as a script or input in a snakemake rule.
# e.g.: workflow.source_path("scripts/_utils.py")

rule all:
    message:
        "ERROR: Invalid `rule all:` call"
    default_target: True
    output:
        "INVALID",
    log:
        stderr="logs/all.stderr",
    conda:
        "envs/shell.yaml"
    shell:
        'echo "This workflow must be called as a snakemake module." > {log.stderr}'
