name: Reusable Pull Request CI tests for modules

on:
  workflow_call:

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Conditionally set up .cdsapirc
        shell: bash
        run: |
          if [ -n "${{ secrets.CDSAPI_KEY }}" ]; then
            if [[ "$RUNNER_OS" == "Windows" ]]; then
              cdsapirc_path="$USERPROFILE/.cdsapirc"
            else
              cdsapirc_path="$HOME/.cdsapirc"
            fi
            echo "url = https://cds.climate.copernicus.eu/api" >> "$cdsapirc_path"
            echo "key = ${{ secrets.CDSAPI_KEY }}" >> "$cdsapirc_path"
          else
            echo "CDSAPI_KEY secret is empty or not set. Skipping .cdsapirc setup."
          fi
      - name: Setup pixi
        uses: prefix-dev/setup-pixi@v0.8.3
      - name: Run integration tests
        id: tests
        run: pixi run test-integration
        continue-on-error: true
      - name: Run snakemake linting
        id: linting
        run: |
          pixi run snakemake --lint --snakefile workflow/Snakefile
          pixi run snakemake --lint --snakefile tests/integration/Snakefile
        continue-on-error: true
      - name: Save integration logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-logs-${{ matrix.os }}
          path: tests/integration/results/integration_test/logs
          if-no-files-found: ignore
          retention-days: 30
      - name: Fail if integration or linting failed
        if: ${{ steps.tests.outcome == 'failure' || steps.linting.outcome == 'failure' }}
        run: exit 1
